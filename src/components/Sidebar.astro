---
export interface Props {
  currentClass?: string;
  currentSubject?: string;
  currentChapter?: string;
}

const { currentClass, currentSubject, currentChapter } = Astro.props;

// Mock data structure for navigation - this would come from your content structure
const navigationData = {
  "6": {
    "science": {
      "1": "Food - Where Does it Come From?",
      "2": "Components of Food (Coming Soon)",
      "3": "Fibre to Fabric (Coming Soon)"
    },
    "mathematics": {
      "1": "Knowing Our Numbers (Coming Soon)",
      "2": "Whole Numbers (Coming Soon)"
    }
  },
  "7": {
    "science": {
      "1": "Nutrition in Plants (Coming Soon)"
    }
  }
};
---

<aside class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 lg:p-6 h-fit sticky top-4">
  <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
    ðŸ“š Study Navigation
  </h3>
  
  <div class="space-y-4">
    {Object.entries(navigationData).map(([classNum, subjects]) => (
      <div class="border-b border-gray-100 pb-4 last:border-b-0 last:pb-0">
        <h4 class="font-medium text-gray-800 mb-2 flex items-center">
          <span class="w-6 h-6 bg-primary-100 text-primary-600 rounded-full flex items-center justify-center text-sm font-bold mr-2">
            {classNum}
          </span>
          Class {classNum}
        </h4>
        
        <div class="ml-8 space-y-2">
          {Object.entries(subjects).map(([subject, chapters]) => (
            <div>
              <h5 class={`text-sm font-medium capitalize mb-1 ${
                currentClass === classNum && currentSubject === subject 
                  ? 'text-primary-600' 
                  : 'text-gray-700'
              }`}>
                {subject === 'science' ? 'ðŸ”¬' : 'ðŸ§®'} {subject}
              </h5>
              
              <div class="ml-6 space-y-1">
                {Object.entries(chapters).map(([chapterNum, chapterTitle]) => {
                  const isAvailable = classNum === '6' && subject === 'science' && chapterNum === '1';
                  const isActive = currentClass === classNum && currentSubject === subject && currentChapter === chapterNum;
                  
                  return (
                    <div>
                      {isAvailable ? (
                        <a 
                          href={`/class-${classNum}/${subject}/chapter-${chapterNum}/summary`}
                          class={`block text-xs p-2 rounded-md transition-colors ${
                            isActive 
                              ? 'bg-primary-100 text-primary-700 font-medium' 
                              : 'text-gray-600 hover:bg-gray-50 hover:text-primary-600'
                          }`}
                        >
                          Ch {chapterNum}: {chapterTitle}
                        </a>
                      ) : (
                        <div class="block text-xs p-2 text-gray-400 cursor-not-allowed">
                          Ch {chapterNum}: {chapterTitle}
                        </div>
                      )}
                    </div>
                  );
                })}
              </div>
            </div>
          ))}
        </div>
      </div>
    ))}
  </div>
  
  <!-- Quick Stats -->
  <div class="mt-6 pt-4 border-t border-gray-100">
    <div class="grid grid-cols-2 gap-3 text-center">
      <div class="bg-green-50 p-3 rounded-lg">
        <div class="text-lg font-bold text-green-600">1</div>
        <div class="text-xs text-green-700">Available</div>
      </div>
      <div class="bg-blue-50 p-3 rounded-lg">
        <div class="text-lg font-bold text-blue-600">12+</div>
        <div class="text-xs text-blue-700">Coming Soon</div>
      </div>
    </div>
  </div>
</aside>